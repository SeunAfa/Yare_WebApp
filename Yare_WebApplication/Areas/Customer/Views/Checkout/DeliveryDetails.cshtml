@model Yare.Models.ViewModels.HomePgVM
@using Microsoft.Extensions.Options
@inject IOptions<Yare.Utility.StripeApiSettings> Stripe
@{
    ViewData["Title"] = "Delivery Details";
}
<style>

    .open-button {
        background-color: red;
        color: white;
        padding: 16px 10px;
        border: none;
        cursor: pointer;
        opacity: 0.9;
        position: fixed;
        top: 50%;
        right: 0;
        overflow: hidden;
        width: 50px;
        height: 170px;
        transform: translateY(-50%);
    }

    .open-buttonWrapper {
        display: flex;
        justify-content: center;
        align-items: center;
        transform: rotate(180deg);
        writing-mode: vertical-rl;
        height: 100%;
    }

    .cardDetails-Container {
        position: fixed;
        top:0;
        right: 0;
        width: 30%;
        height: 100%;
        background-color: #f9f9f9;
        padding: 20px;
        padding-top: 60px;
        display: none;
        z-index: 1;
    }

    .closeBtn-cardDetails {
        font-size: 25px;
        cursor: pointer;
        position: absolute;
        top: 10px;
        right: 10px;
        text-decoration: none;
    }
 

</style>
<form id="order-form" method="post" >

            <div class="checkout-header" style="">

                <div class="productList-breadcrumbLeft-Wrapper">
                    <a asp-area="Customer" asp-controller="Home" asp-action="Index" class="text-black">Home</a>
                    <span>/</span>
                    <a asp-area="Customer" asp-controller="Checkout" asp-action="Summary" class="text-black">Checkout</a>
                </div>

            </div>

            <div class="checkout-card-body">

                <div class="checkout-card-bodyLeft">

                    <h6 class="text-black">Delivery Details</h6>

                    <p class="estimateDate text-black" style="font-size:12px;">
                        Estimate Arrival Date: @DateTime.Now.AddDays(7).ToString("dddd dd MMM yyyy") - @DateTime.Now.AddDays(14).ToString("dddd dd MMM yyyy")
                    </p>

                    @if (TempData["ErrorMessage"] != null)
                    {
                        <div class="alert alert-danger">
                            @TempData["ErrorMessage"]
                        </div>
                    }

                    <div class="form-group form-groupProduct">
                        <label asp-for="ShoppingCartVM.OrderHeader.FirstName" class="control-label text-black"></label>
                        <input asp-for="ShoppingCartVM.OrderHeader.FirstName" class="form-control text-black border-dark" />
                        <span asp-validation-for="ShoppingCartVM.OrderHeader.FirstName" class="text-danger"></span>
                    </div>

                    <div class="form-group form-groupProduct">
                        <label asp-for="ShoppingCartVM.OrderHeader.LastName" class="control-label text-black"></label>
                        <input asp-for="ShoppingCartVM.OrderHeader.LastName" class="form-control text-black border-dark" />
                        <span asp-validation-for="ShoppingCartVM.OrderHeader.LastName" class="text-danger"></span>
                    </div>

                    <div class="form-group form-groupProduct">
                        <label asp-for="ShoppingCartVM.OrderHeader.PhoneNumber" class="control-label text-black"></label>
                        <input asp-for="ShoppingCartVM.OrderHeader.PhoneNumber" class="form-control text-black border-dark" />
                        <span asp-validation-for="ShoppingCartVM.OrderHeader.PhoneNumber" class="text-danger"></span>
                    </div>

                    <div class="form-group form-groupProduct">
                        <label asp-for="ShoppingCartVM.OrderHeader.StreetAdress" class="control-label text-black"></label>
                        <input asp-for="ShoppingCartVM.OrderHeader.StreetAdress" class="form-control text-black border-dark" />
                        <span asp-validation-for="ShoppingCartVM.OrderHeader.StreetAdress" class="text-danger"></span>
                    </div>

                    <div class="form-group form-groupProduct">
                        <label asp-for="ShoppingCartVM.OrderHeader.City" class="control-label text-black"></label>
                        <input asp-for="ShoppingCartVM.OrderHeader.City" class="form-control text-black border-dark" />
                        <span asp-validation-for="ShoppingCartVM.OrderHeader.City" class="text-danger"></span>
                    </div>

                    <div class="form-group form-groupProduct">
                        <label asp-for="ShoppingCartVM.OrderHeader.Borough" class="control-label text-black"></label>
                        <input asp-for="ShoppingCartVM.OrderHeader.Borough" class="form-control text-black border-dark" />
                        <span asp-validation-for="ShoppingCartVM.OrderHeader.Borough" class="text-danger"></span>
                    </div>

                    <div class="form-group form-groupProduct">
                        <label asp-for="ShoppingCartVM.OrderHeader.PostCode" class="control-label text-black"></label>
                        <input asp-for="ShoppingCartVM.OrderHeader.PostCode" class="form-control text-black border-dark" />
                        <span asp-validation-for="ShoppingCartVM.OrderHeader.PostCode" class="text-danger"></span>
                    </div>

                </div>

                <div class="checkout-card-bodyRight">

                    <div class="checkout-card-bodyRight-Top">

                        <h6 class="text-black">Order Summary</h6>

                        <div class="checkout-card-bodyRight-topWrapper">

                    @if (Model.ShoppingCartVM.ShoppingCartList != null && Model.ShoppingCartVM.ShoppingCartList.Any())
                    {
                        @foreach (var checkoutItem in Model.ShoppingCartVM.ShoppingCartList)
                        {
                            string shortenedProductName = checkoutItem.Product.ProductName.Length > 35 ? $"{checkoutItem.Product.ProductName.Substring(0, 35)}..." : checkoutItem.Product.ProductName;

                            int countPrice = (int)(checkoutItem.Product.Price * checkoutItem.Count);

                            <div class="checkout-product-Item" data-id="@checkoutItem.Id">
                                <div class="checkout-productLeft-Item">
                                    <div class="checkout-productLeft-Img">
                                        <img class="checkout-imgItem-Wrapper" src="@checkoutItem.Product.PrimaryDisplayImageUrl" />
                                    </div>
                                </div>
                                <div class="checkout-productRight-Item">
                                    <a asp-area="Customer" asp-action="Details" asp-controller="Home" asp-route-productId="@checkoutItem.Product.Id" class="text-black shoppingBag-info-Text">@shortenedProductName</a>
                                    <p class="text-black shoppingBag-info-Text">@checkoutItem.Product.ProductNumber</p>
                                    <p class="text-black shoppingBag-info-Text">@checkoutItem.Product.Gender @checkoutItem.Product.ProductCategory</p>
                                    <p class="text-black shoppingBag-info-Text">
                                        <span class="item-count">@checkoutItem.Count</span> X <span class="Countprice">@countPrice.ToString("c")</span>
                                    </p>
                                </div>
                            </div>
                        }
                    }
                    else
                    {
                        <p class="text-dark">Your shopping cart is empty.</p>
                    }

                        </div>

                    </div>

                    <div class="checkout-card-bodyRight-Bottom">

                        <table style="width:100%;">
                            <tbody>
                                <tr>
                                    <td class="text-black" style="width:50%;">Delivery</td>
                                    <td class="text-black" style="width:50%;text-align:right;"><strong>Free</strong></td>
                                </tr>
                                <tr>
                                    <td class="text-black" style="width:50%;">Total</td>
                                    <td class="text-black OrderTotal" style="width:50%;text-align:right;"><strong>@(Model.ShoppingCartVM.OrderHeader != null ? Model.ShoppingCartVM.OrderHeader.OrderTotal.ToString("c") : "0")</strong></td>
                                </tr>
                            </tbody>
                        </table>

                        <button id="placeOrderBtn" class="" type="submit" value="">
                            Place Order
                        </button>

                    </div>

                </div>

            </div>

</form>

<button class="open-button">
    <div class="open-buttonWrapper">Card Details</div>
</button>

<div class="cardDetails-Container">
    <a class="btn text-danger bi bi-x closeBtn-cardDetails"></a>
    <div class="cardDetails-Wrapper">
        <h3 class="text-black">Card Details:</h3>
        <ul>
            <li>
                In order to place order you can use any test credit card number supported by stripe.
                <ul>
                    <li>A default example is 4242 4242 4242 4242, valid date , any 3 digit CVV.</li>
                    <li class="copyIconLink" style="cursor: pointer;">Click to copy card number<span class="cardNumber" style="padding-left:4px;padding-right:4px;">4242 4242 4242 4242</span><i class="bi bi-clipboard copyIcon"></i></li>
                </ul>
            </li>
            <li>Stripe testing card numbers <a class="text-black" style="text-decoration:underline;" href="https://docs.stripe.com/testing" target="_blank">https://docs.stripe.com/testing</a></li>
        </ul>
    </div>
</div>

@section Scripts {
    <script>
        ///////////////////////////////////
        // _Layout Searchbar Component
        const filterUrl = '@Url.Action("Filter", "Checkout")';

        ////////////////////////////////////////
        //Hide & Show card details Component
        const openButton = document.querySelector(".open-button");
        const closeBtn_cardDetails = document.querySelector(".closeBtn-cardDetails");
        const cardDetails_Container = document.querySelector(".cardDetails-Container");

        //Show Shopping Cart
        openButton.addEventListener("click", () => {

            cardDetails_Container.style.display = "block";
            cardDetails_Container.style.transition = "al; 0.3s ease-in-out";

        });

        //Hide Shopping Cart
        closeBtn_cardDetails.addEventListener("click", () => {

            cardDetails_Container.style.display = "none";
            cardDetails_Container.style.transition = "al; 0.3s ease-in-out";

        });


        ////////////////////////////////////////
        //Copy Card Details Component
        document.addEventListener("DOMContentLoaded", function () {
            var copyIconLink = document.querySelector('.copyIconLink');

            copyIconLink.addEventListener('click', function () {
                // Find the clipboard icon within the li element
                var iconElement = this.querySelector('.copyIcon');

                // Call the function to copy the card number and change the icon
                copyCardNumber(iconElement);
            });
        });

        function copyCardNumber(iconElement) {
            // Select the card number text
            var cardNumber = document.querySelector('.cardNumber').innerText;

            // Create a temporary input element to hold the text
            var tempInput = document.createElement('input');
            tempInput.value = cardNumber;

            // Append the input to the body temporarily
            document.body.appendChild(tempInput);

            // Select the content of the input
            tempInput.select();
            tempInput.setSelectionRange(0, 99999); 

            // Copy the text to clipboard
            document.execCommand("copy");

            // Remove the temporary input element
            document.body.removeChild(tempInput);

            // Change the icon to 'bi-clipboard-check'
            iconElement.classList.remove('bi-clipboard');
            iconElement.classList.add('bi-clipboard-check');

            // Revert the icon back to 'bi-clipboard' after 2 seconds
            setTimeout(function () {
                iconElement.classList.remove('bi-clipboard-check');
                iconElement.classList.add('bi-clipboard');
            }, 2000); // Change back after 2 seconds
        }


    </script>
}
