@using Yare.Models.Enums;
@using static Yare_WebApplication.Areas.Admin.Controllers.ProductController;
@model Yare.Models.ViewModels.ProductVM;

@{
    ViewData["Title"] = Model.ProductName;
}

@functions {
    public bool ShouldShowField(string data)
    {
        return !string.IsNullOrEmpty(data);
    }
}
<div class="breadcrumbs" style="padding-bottom:10px;">
    <a asp-area="Admin" asp-controller="Product" asp-action="Index">Products</a>
    <span>/</span>
    <a><b>Details</b> @Model.ProductName</a>
</div>
<h4 class="text-black">@Model.ProductName</h4>
<hr />
<form asp-action="Details" method="post" class="">

    <input asp-for="Id" hidden />
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>

    <div id="adminCardContainer">

        <div id="adminCardWrapper">

            <!--TopLeft-->
            <div id="adminCardContainer-Left" class="p-2">

                <h5 class="text-black">Product Details</h5>

                <div class="adminCardContainer-productDetails-leftRow row">

                    <div class="adminCardContainer-Left-productDetails col">

                        <div class="form-group">
                            <label asp-for="ProductName" class="control-label text-black"></label>
                            <input asp-for="ProductName" class="form-control text-black border-dark" readonly disabled />
                            <span asp-validation-for="ProductName" class="text-danger"></span>
                        </div>

                        <div class="form-group">
                            <label asp-for="ModelNumber" class="control-label text-black"></label>
                            <input asp-for="ModelNumber" class="form-control text-black border-dark" readonly disabled />
                            <span asp-validation-for="ModelNumber" class="text-danger"></span>
                        </div>

                        @if (Model.Watch != null)
                        {
                            <div class="form-group">
                                <label asp-for="@Model.WatchBrand" class="control-label text-black"></label>
                                <select asp-for="@Model.WatchBrand" class="form-control text-black border-dark" asp-items="Html.GetEnumSelectList<WatchBrand>()" readonly disabled>
                                    <option selected disabled>Select Brand</option>
                                </select>
                                <span asp-validation-for="@Model.WatchBrand" class="text-danger"></span>
                            </div>
                        }
                        else if (Model.Jewellery != null)
                        {
                            <div class="form-group">
                                <label asp-for="@Model.JewelleryCategory" class="control-label text-black"></label>
                                <select asp-for="@Model.JewelleryCategory" class="form-control text-black border-dark" asp-items="Html.GetEnumSelectList<JewelleryCategory>()" readonly disabled>
                                    <option selected disabled>Select Category</option>
                                </select>
                                <span asp-validation-for="@Model.JewelleryCategory" class="text-danger"></span>
                            </div>

                        }
                        else if (Model.Accessory != null)
                        {
                            <div class="form-group">
                                <label asp-for="@Model.AccessoryCategory" class="control-label text-black"></label>
                                <select asp-for="@Model.AccessoryCategory" class="form-control text-black border-dark" asp-items="Html.GetEnumSelectList<AccessoryCategory>()" readonly disabled>
                                    <option selected disabled>Select Category</option>
                                </select>
                                <span asp-validation-for="@Model.AccessoryCategory" class="text-danger"></span>
                            </div>
                        }

                        @if (ShouldShowField(Model.ByOccassion?.ToString()))
                        {
                            <div class="form-group">
                                <label asp-for="@Model.ByOccassion" class="control-label text-black"></label>
                                <select asp-for="@Model.ByOccassion" class="form-control text-black border-dark" asp-items="Html.GetEnumSelectList<ByOccassion>()" readonly disabled>
                                    <option selected disabled>Select Occasion</option>
                                </select>
                                <span asp-validation-for="@Model.ByOccassion" class="text-danger"></span>
                            </div>
                        }

                        <div class="form-group">
                            @Html.LabelFor(model => model.SelectedCollectionIds, "Collections")
                            <div class="dropdown">
                                <button class="dropdown-btn btn border-dark dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false" style="text-align: left;background-color:rgb(233, 236, 239);">
                                    <div id="collection-btn" style="">Select Collection</div>
                                </button>
                                <ul class="dropdown-menu dropdown-menu-Collections">
                                    @foreach (var item in Model.CollectionList)
                                    {
                                        <li>
                                            <div class="dropdown-item" style="display: flex; align-items: center;height:fit-content;">

                                                <label class="dropdown-checkbox" style="display: flex; align-items: center; margin-bottom: 0;">
                                                    @{
                                                        int itemId = Convert.ToInt32(item.Value);
                                                    }
                                                    <input type="checkbox" name="SelectedCollectionIds" value="@itemId"
                                                    @(Model.SelectedCollectionIds != null && Model.SelectedCollectionIds.Contains(itemId) ? "checked" : "")
                                                           style="margin-right: 5px;" readonly disabled />
                                                    @item.Text
                                                </label>

                                            </div>
                                        </li>
                                    }
                                </ul>
                            </div>
                        </div>

                    </div>

                    <div class="adminCardContainer-Right-productDetails col">

                        <div class="form-group">
                            <label asp-for="ProductNumber" class="control-label text-black"></label>
                            <input asp-for="ProductNumber" class="form-control text-black border-dark" readonly disabled />
                            <span asp-validation-for="ProductNumber" class="text-danger"></span>
                        </div>

                        <div class="form-group">
                            <label asp-for="Supplier" class="control-label text-black"></label>
                            <input asp-for="Supplier" class="form-control text-black border-dark" readonly disabled />
                            <span asp-validation-for="Supplier" class="text-danger"></span>
                        </div>

                        <div class="form-group">
                            <label asp-for="Gender" class="control-label text-black"></label>
                            <select asp-for="Gender" class="form-control text-black border-dark" asp-items="Html.GetEnumSelectList<Gender>()" readonly disabled>
                                <option selected disabled>Select Gender</option>
                            </select>
                            <span asp-validation-for="Gender" class="text-danger"></span>
                        </div>

                        @if (ShouldShowField(Model.ByGemstone?.ToString()))
                        {
                            <div class="form-group">
                                <label asp-for="@Model.ByGemstone" class="control-label text-black"></label>
                                <select asp-for="@Model.ByGemstone" class="form-control text-black border-dark" asp-items="Html.GetEnumSelectList<ByGemstone>()" readonly disabled>
                                    <option selected disabled>Select Gemstone</option>
                                </select>
                                <span asp-validation-for="@Model.ByGemstone" class="text-danger"></span>
                            </div>
                        }

                        <div class="form-group">
                            <label asp-for="ProductCategory" class="control-label"></label>
                            <input asp-for="ProductCategory" class="form-control text-black border-dark" readonly disabled />
                        </div>

                    </div>

                </div>

                <div class="adminCardContainer-productDetails-leftRow row">

                    <div class="adminCardContainer-Left-productDetails col">

                        <div class="form-group">
                            <label asp-for="Quantity" class="control-label text-black"></label>
                            <input asp-for="Quantity" min="0" id="Quantity" class="form-control text-black border-dark" readonly disabled />
                            <span asp-validation-for="Quantity" class="text-danger"></span>
                        </div>

                        <div class="form-group">
                            <label asp-for="CreatedDateTime" class="control-label text-black"></label>
                            <input asp-for="CreatedDateTime" class="form-control text-black border-dark" readonly disabled />
                            <span asp-validation-for="CreatedDateTime" class="text-danger"></span>
                        </div>

                    </div>

                    <div class="adminCardContainer-Right-productDetails col">

                        <div class="form-group">
                            <label asp-for="RemainigQuantity" class="control-label text-black"></label>
                            <input asp-for="RemainigQuantity" min="0" id="RemainigQuantity" class="form-control text-black border-dark" readonly disabled />
                            <span asp-validation-for="RemainigQuantity" class="text-danger"></span>
                        </div>

                        <div class="form-group">
                            <label asp-for="LastUpdate" class="control-label text-black"></label>
                            <input asp-for="LastUpdate" class="form-control text-black border-dark" readonly disabled />
                            <span asp-validation-for="LastUpdate" class="text-danger"></span>
                        </div>

                    </div>

                </div>

                <div class="form-group">
                    <label asp-for="ProductDescription" class="control-label text-black"></label>
                    <textarea asp-for="ProductDescription" class="form-control text-black border-dark" rows="8" readonly disabled></textarea>
                    <span asp-validation-for="ProductDescription" class="text-danger"></span>
                </div>

            </div>

            <!--TopRight-->
            <div id="adminCardContainer-Right" class="p-2">

                <h5 class="text-black">Product Images</h5>

                <div class="imgDisplay-viewerContainer">
                    <img class="mainImgDisplay-viewerWrapper" src="@Model.PrimaryDisplayImageUrl" />
                    <div class="imgDisplay-uploadViewer-Container">
                        <img id="imgDisplay-uploadViewer-1" class="imgDisplay-uploadViewer-Btn imgDisplay-uploadViewer-activeBtn" src="@Model.PrimaryDisplayImageUrl" alt="No Image" />
                        <img id="imgDisplay-uploadViewer-2" class="imgDisplay-uploadViewer-Btn" src="@Model.SecondaryDisplayImageUrl" alt="No Image" />
                        <img id="imgDisplay-uploadViewer-3" class="imgDisplay-uploadViewer-Btn" src="@Model.SliderImageUrlOne" alt="No Image" />
                        <img id="imgDisplay-uploadViewer-4" class="imgDisplay-uploadViewer-Btn" src="@Model.SliderImageUrlTwo" alt="No Image" />
                        <img id="imgDisplay-uploadViewer-5" class="imgDisplay-uploadViewer-Btn" src="@Model.SliderImageUrlThree" alt="No Image" />
                        <img id="imgDisplay-uploadViewer-6" class="imgDisplay-uploadViewer-Btn" src="@Model.SliderImageUrlFour" alt="No Image" />
                    </div>
                </div>

                <div id="imageProductInputContainer" class="">
                    <div class="row">

                        <div class="col">
                            <div class="form-group">
                                <label asp-for="PrimaryDisplayImageUrl" class="control-label text-black"></label>
                                <input asp-for="PrimaryDisplayImageUrl" class="imgDisplay-uploadViewer-Input-1 form-control text-black border-dark" readonly disabled />
                                <span asp-validation-for="PrimaryDisplayImageUrl" class="text-danger"></span>
                            </div>
                            <div class="form-group">
                                <label asp-for="SliderImageUrlOne" class="control-label text-black"></label>
                                <input asp-for="SliderImageUrlOne" class="imgDisplay-uploadViewer-Input-3 form-control text-black border-dark" readonly disabled />
                                <span asp-validation-for="SliderImageUrlOne" class="text-danger"></span>
                            </div>
                            <div class="form-group">
                                <label asp-for="SliderImageUrlThree" class="control-label text-black"></label>
                                <input asp-for="SliderImageUrlThree" class="imgDisplay-uploadViewer-Input-5 form-control text-black border-dark" readonly disabled />
                                <span asp-validation-for="SliderImageUrlThree" class="text-danger"></span>
                            </div>
                        </div>

                        <div class="col">
                            <div class="form-group">
                                <label asp-for="SecondaryDisplayImageUrl" class="control-label text-black"></label>
                                <input asp-for="SecondaryDisplayImageUrl" class="imgDisplay-uploadViewer-Input-2 form-control text-black border-dark" readonly disabled />
                                <span asp-validation-for="SecondaryDisplayImageUrl" class="text-danger"></span>
                            </div>
                            <div class="form-group">
                                <label asp-for="SliderImageUrlTwo" class="control-label text-black"></label>
                                <input asp-for="SliderImageUrlTwo" class="imgDisplay-uploadViewer-Input-4 form-control text-black border-dark" readonly disabled />
                                <span asp-validation-for="SliderImageUrlTwo" class="text-danger"></span>
                            </div>
                            <div class="form-group">
                                <label asp-for="SliderImageUrlFour" class="control-label text-black"></label>
                                <input asp-for="SliderImageUrlFour" class="imgDisplay-uploadViewer-Input-6 form-control text-black border-dark" readonly disabled />
                                <span asp-validation-for="SliderImageUrlFour" class="text-danger"></span>
                            </div>
                        </div>

                    </div>
                </div>

            </div>

        </div>

        <h5 class="text-black" style="margin-top:20px;">Product Specification</h5>

        <div id="adminCardContainer-Middle" class="row">

            <div class="col">

                @if (Model.Watch != null)
                {
                    <div class="form-group">
                        <label asp-for="@Model.WatchStrapType" class="control-label text-black"></label>
                        <select asp-for="@Model.WatchStrapType" class="form-control text-black border-dark" asp-items="Html.GetEnumSelectList<WatchStrapType>()" readonly disabled>
                            <option selected disabled>Select Category</option>
                        </select>
                        <span asp-validation-for="@Model.WatchStrapType" class="text-danger"></span>
                    </div>

                    <div class="form-group">
                        <label asp-for="@Model.ByMetal" class="control-label text-black"></label>
                        <select asp-for="@Model.ByMetal" class="form-control text-black border-dark" asp-items="Html.GetEnumSelectList<ByMetal>()" readonly disabled>
                            <option selected disabled>Select Metal</option>
                        </select>
                        <span asp-validation-for="@Model.ByMetal" class="text-danger"></span>
                    </div>

                    <div class="form-group">
                        <label asp-for="@Model.WatchMovement" class="control-label text-black"></label>
                        <select asp-for="@Model.WatchMovement" class="form-control text-black border-dark" asp-items="Html.GetEnumSelectList<WatchMovement>()" readonly disabled>
                            <option selected disabled>Select Category</option>
                        </select>
                        <span asp-validation-for="@Model.WatchMovement" class="text-danger"></span>
                    </div>

                    <div class="form-group">
                        <label asp-for="@Model.WaterResistant" class="control-label text-black"></label>
                        <select asp-for="@Model.WaterResistant" class="form-control text-black border-dark" asp-items="Html.GetEnumSelectList<WaterResistant>()" readonly disabled>
                            <option selected disabled>Select Category</option>
                        </select>
                        <span asp-validation-for="@Model.WaterResistant" class="text-danger"></span>
                    </div>

                }

                <div class="form-group">
                    <label asp-for="WarrantyYears" class="control-label text-black"></label>
                    <select asp-for="WarrantyYears" class="form-control text-black border-dark" asp-items="Html.GetEnumSelectList<WarrantyYears>()" readonly disabled>
                        <option selected disabled>Select Year</option>
                    </select>
                    <span asp-validation-for="WarrantyYears" class="text-danger"></span>
                </div>

            </div>

            <div class="col">

                @if (Model.Watch != null)
                {

                    <div class="form-group">
                        <label asp-for="@Model.StrapColour" class="control-label text-black"></label>
                        <input asp-for="@Model.StrapColour" class="form-control text-black border-dark" readonly disabled />
                        <span asp-validation-for="@Model.StrapColour" class="text-danger"></span>
                    </div>

                    <div class="form-group">
                        <label asp-for="@Model.WatchCaseShape" class="control-label text-black"></label>
                        <select asp-for="@Model.WatchCaseShape" class="form-control text-black border-dark" asp-items="Html.GetEnumSelectList<WatchCaseShape>()" readonly disabled>
                            <option selected disabled>Select Case Shape</option>
                        </select>
                        <span asp-validation-for="@Model.WatchCaseShape" class="text-danger"></span>
                    </div>

                    <div class="form-group">
                        <label asp-for="@Model.WatchDiameter" class="control-label text-black"></label>
                        <select asp-for="@Model.WatchDiameter" class="form-control text-black border-dark" asp-items="Html.GetEnumSelectList<WatchDiameter>()" readonly disabled>
                            <option selected disabled>Select Watch Diameter</option>
                        </select>
                        <span asp-validation-for="@Model.WatchDiameter" class="text-danger"></span>
                    </div>

                    <div class="form-group">
                        <label asp-for="@Model.DialColor" class="control-label text-black"></label>
                        <input asp-for="@Model.DialColor" class="form-control text-black border-dark" readonly disabled />
                        <span asp-validation-for="@Model.DialColor" class="text-danger"></span>
                    </div>
                }
                @if (Model.Jewellery != null)
                {

                    <div class="form-group">
                        <label asp-for="@Model.ByMetal" class="control-label text-black"></label>
                        <select asp-for="@Model.ByMetal" class="form-control text-black border-dark" asp-items="Html.GetEnumSelectList<ByMetal>()" readonly disabled>
                            <option selected disabled>Select Metal</option>
                        </select>
                        <span asp-validation-for="@Model.ByMetal" class="text-danger"></span>
                    </div>

                }

            </div>

        </div>

        <h5 class="text-black" style="margin-top:20px;">Product Pricing</h5>

        <div id="adminCardContainer-Bottom" class="row">

            <div class="col">

                <div style="display: flex; justify-content: center; align-items: center; overflow: hidden; width: 100%; height: 350px; padding: 5px; ">
                    <canvas id="costBreakdownChart" style="width:90%;height:90%;"></canvas>
                </div>

                <div class="form-group">
                    <label asp-for="CostOfProduct" class="control-label text-black"></label>
                    <input asp-for="CostOfProduct" id="costOfProduct" class="form-control text-black border-dark" readonly disabled />
                    <span asp-validation-for="CostOfProduct" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label asp-for="TargetPrice01" class="control-label text-black"></label>
                    <input asp-for="TargetPrice01" id="targetPrice01" class="form-control text-black border-dark" readonly disabled />
                    <span asp-validation-for="TargetPrice01" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label asp-for="TargetPrice03" class="control-label text-black"></label>
                    <input asp-for="TargetPrice03" id="targetPrice03" class="form-control text-black border-dark" readonly disabled />
                    <span asp-validation-for="TargetPrice03" class="text-danger"></span>
                </div>


            </div>

            <div class="col">

                <div style="display: flex; justify-content: center; align-items: center; overflow: hidden; width: 100%; height: 350px; padding: 5px; ">
                    <canvas id="profitMarginChart" style="width:90%;height:90%;"></canvas>
                </div>

                <div class="form-group">
                    <label asp-for="Price" class="control-label text-black"></label>
                    <input asp-for="Price" id="price" class="form-control text-black border-dark" readonly disabled />
                    <span asp-validation-for="Price" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label asp-for="TargetPrice02" class="control-label text-black"></label>
                    <input asp-for="TargetPrice02" id="targetPrice02" class="form-control text-black border-dark" readonly disabled />
                    <span asp-validation-for="TargetPrice02" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label asp-for="PriceWas" class="control-label text-black"></label>
                    <input asp-for="PriceWas" class="form-control text-black border-dark" readonly disabled />
                    <span asp-validation-for="PriceWas" class="text-danger"></span>
                </div>

            </div>

        </div>

    </div>

    <a asp-controller="Product" asp-action="Edit" asp-route-id="@Model.Id" class="admin-btn btn btn-dark text-white" style="position:fixed;right:25px;bottom:20px;">Edit</a>

</form>

@section Scripts {

    <script>

         document.addEventListener("DOMContentLoaded", function () {
            const collectionBtn = document.getElementById('collection-btn');
            const checkboxes = document.querySelectorAll('input[name="SelectedCollectionIds"]');

            // Create a mapping object to store numeric IDs and their corresponding text values
            const idToTextMap = {
        @foreach (var item in Model.CollectionList)
        {
            @: '@item.Value': '@item.Text',
        }
                };

        function updateButtonText() {
            const checkedValues = [];
            checkboxes.forEach(function (checkbox) {
                if (checkbox.checked) {
                    // Use the mapping object to retrieve the text value corresponding to the numeric ID
                    checkedValues.push(idToTextMap[parseInt(checkbox.value)]);
                }
            });
            if (checkedValues.length > 0) {
                collectionBtn.textContent = checkedValues.join(', ');
            } else {
                collectionBtn.textContent = 'Select Collection';
            }
        }

        checkboxes.forEach(function (checkbox) {
            checkbox.addEventListener('change', updateButtonText);
        });

        // Update button text on page load
        updateButtonText();
            });

        const imgDisplay_uploadViewer_Btn = document.querySelectorAll(".imgDisplay-uploadViewer-Btn");
        const mainImgDisplay_viewerWrapper = document.querySelector(".mainImgDisplay-viewerWrapper");

        function uploadActive_mainImg() {
            imgDisplay_uploadViewer_Btn.forEach((item) => {
                item.addEventListener("click", () => {

                    imgDisplay_uploadViewer_Btn.forEach(btn => {
                        btn.classList.remove('imgDisplay-uploadViewer-activeBtn');
                    });

                    item.classList.add('imgDisplay-uploadViewer-activeBtn');

                    const imageUrl = item.src;

                    mainImgDisplay_viewerWrapper.src = imageUrl;
                });
            });
        }

        uploadActive_mainImg();

 



        function updateDoughnutChart() {
            const ctx = document.getElementById("costBreakdownChart").getContext("2d");

            const costOfProductValue = parseFloat(document.getElementById("costOfProduct").value);
            const targetPrice03Value = parseFloat(document.getElementById("targetPrice03").value);
            const targetPrice02Value = parseFloat(document.getElementById("targetPrice02").value);
            const targetPrice01Value = parseFloat(document.getElementById("targetPrice01").value);
            const priceValue = parseFloat(document.getElementById("price").value);


            const chartData = {
                labels: [
                    "Cost of each product",
                    `Target Price 3`,
                    `Target Price 2`,
                    `Target Price 1`,
                    `Price`
                ],
                datasets: [
                    {
                        label: "Product cost break down",
                        backgroundColor: [
                            '#2d53de',    
                                '#553772',
                                '#8f3b76',
                                '#c7417b',
                                '#f5477e',
                        ],
                        data: [
                            costOfProductValue,
                            targetPrice03Value,
                            targetPrice02Value,
                            targetPrice01Value,
                            priceValue
                        ]
                    }
                ]
            };

            const options = {
                responsive: true,
                maintainAspectRatio: false,
                cutout: '55%',
                tooltips: {
                    callbacks: {
                        label: function (tooltipItem, data) {
                            let label = data.labels[tooltipItem.index] + ': ';
                            label += tooltipItem.yLabel; // Display the individual dataset value
                            return label;
                        }
                    }
                },
                plugins: {
                    // title: {
                    //     display: true,
                    //     text: 'PRODUCT COST BREAK DOWN',
                    // },
                    legend: {
                        position: 'left', // Set legend position to 'right'
                        align: 'center', // Optional: Center-align the legend vertically
                        labels: {
                            boxWidth: 15, // Optional: Adjust the width of the legend color box
                        },
                    },
                },
            };


            // Check if the chart already exists
            const existingChart = Chart.getChart(ctx);

            if (existingChart) {
                // Update existing chart
                existingChart.data = chartData;
                existingChart.options = options;
                existingChart.update();
            } else {
                // Create a new chart if it doesn't exist
                new Chart(ctx, {
                    type: "doughnut",
                    data: chartData,
                    options: options
                });
            }
        }

        updateDoughnutChart();

        function updateProfitMarginChart() {
            const ctx = document.getElementById('profitMarginChart').getContext('2d');

            // Get the updated cost and target prices
            const cost = parseFloat(document.getElementById("costOfProduct").value);
            const price = parseFloat(document.getElementById("price").value);
            const targetPrices = [
                parseFloat(document.getElementById("targetPrice01").value),
                parseFloat(document.getElementById("targetPrice02").value),
                parseFloat(document.getElementById("targetPrice03").value)
            ];

            // Calculate profit margins
            const profitMargins = targetPrices.map(targetPrice => targetPrice - cost);

            // Add the "Price" to the profit margins
            profitMargins.unshift(price - cost);

            // Labels for the profit margin chart
            const labels = ['Price', 'Target Price 1', 'Target Price 2', 'Target Price 3'];

            const existingChart = Chart.getChart(ctx);

            if (existingChart) {
                existingChart.data.labels = labels;
                existingChart.data.datasets[0].data = profitMargins;
                existingChart.update();
            } else {
                new Chart(ctx, {
                    type: 'bar',
                    data: {
                        labels: labels,
                        datasets: [{
                            label: 'Profit Margin',
                            data: profitMargins,
                            backgroundColor: [
                                  '#f5477e',    
                            '#c7417b',
                            '#8f3b76',
                                '#553772',
                            ],
                            borderColor: [
                              '#f5477e',    
                                    '#c7417b',
                                '#8f3b76',
                                '#553772',
                            ],
                            borderWidth: 1
                        }]
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        scales: {
                            y: {
                                beginAtZero: true
                            }
                        },
                        title: {
                            display: true,
                            text: 'Profit Margin Chart'
                        }
                    }
                });
            }
        }

        updateProfitMarginChart();

    </script>
} 